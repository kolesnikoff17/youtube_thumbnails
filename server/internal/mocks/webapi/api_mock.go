// Code generated by mockery v2.14.0. DO NOT EDIT.

package apimock

import (
	context "context"
	entity "thumbs/server/internal/entity"

	mock "github.com/stretchr/testify/mock"
)

// ThumbWebAPI is an autogenerated mock type for the ThumbWebAPI type
type ThumbWebAPI struct {
	mock.Mock
}

// GetThumbFromAPI provides a mock function with given fields: ctx, id
func (_m *ThumbWebAPI) GetThumbFromAPI(ctx context.Context, id string) (entity.Pic, error) {
	ret := _m.Called(ctx, id)

	var r0 entity.Pic
	if rf, ok := ret.Get(0).(func(context.Context, string) entity.Pic); ok {
		r0 = rf(ctx, id)
	} else {
		r0 = ret.Get(0).(entity.Pic)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewThumbWebAPI interface {
	mock.TestingT
	Cleanup(func())
}

// NewThumbWebAPI creates a new instance of ThumbWebAPI. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewThumbWebAPI(t mockConstructorTestingTNewThumbWebAPI) *ThumbWebAPI {
	mock := &ThumbWebAPI{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
